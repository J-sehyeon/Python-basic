# 숫자

# 정수형: 소수점이 없는 숫자 ex) 0, 273, -1, 실수형: 소수점이 있는 숫자  ex) 0.0, 273.1, -1.1
# 중요한 영단어  / integer(정수) /floating point(실수 또는 부동 소수점)  
# 부동 소수점이란 '소수점이 움직이는 숫자'이다. (52.273 = 0.52273 x 10^2)
print(type(273))    # <class 'int'>
print(type(273.1))  # <class 'float'>
# 일반적으로 프로그래밍 언어에서 두 자료형(정수형과 실수형)을 구분해 사용한다.   / 문자열 선택 연산자([]) 등을 사용할 때 주의
print((2, 3, 5, 34, 2.73)[4]) # 오류 안뜨는데..?
0.52273e2   # 52.273 =()

# 숫자 연산자
# 사칙연산자: +, -, *, /
print(5+7)  # 12
print(5-7)  # -2
print(5*7)  # 35
print(5/7)  # 0.7142857142857143 / 나누기의 경우 나른 사칙 연산자와는 다르게 결괏값이 반드시 실수형이다. 
# 정수 나누기 연산자: // / 숫자를 나누고 소수점 이하의 자릿수를 떼어 버린 후 정수 부분만 남긴다.
print(3/2)  # 1.5
print(3//2) # 1
# 나머지 연산자: %
print(5%2)  # 1
print(4%10) # 4
# 제곱 연산자: **
print(3**2) # 9
# 연산자의 우선순위: 숫자를 계산할 때와 마찬가지로 곱셈과 나눗셈이 덧셈과 뺄셈보다 우선한다. 동일 우선순위의 경우 왼쪽에서 오른쪽으로 계산한다.
print(5+3*2)    # 11
# 연산자의 우선순위에 괄호를 쳐서 가독성을 높이는 것이 좋다.
print(5 + (3 * 2))
# TypeError 예외 / "문자열" + 숫자   /print("안녕하세요" + 1)_TypeError: can only concatenate str (not "int") to str

# 문자열 연산자의 우선순위
print("안녕" + "하세요" * 3)    # 안녕하세요하세요하세요
print(("안녕" + "하세요") * 3)  # 안녕하세요안녕하세요안녕하세요
print(("안녕" , "하세요") * 3)  # ('안녕', '하세요', '안녕', '하세요', '안녕', '하세요')
print((1, 3)*3) # (1, 3, 1, 3, 1, 3) / 집합 내부에 원소가 두 개 이상이면 '집합 * 숫자'은 집합을 "숫자"개만큼 합친 것과 같다.

